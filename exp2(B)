//Queue Implementation Using Stacks
#include <iostream>
#include <stack>
using namespace std;

class MyQueue {
private:
    stack<int> inputStack, outputStack;

    void transfer() {
        while (!inputStack.empty()) {
            outputStack.push(inputStack.top());
            inputStack.pop();
        }
    }

public:
    void push(int x) {
        inputStack.push(x);
    }

    int pop() {
        if (outputStack.empty()) {
            transfer();
        }
        int top = outputStack.top();
        outputStack.pop();
        return top;
    }

    int peek() {
        if (outputStack.empty()) {
            transfer();
        }
        return outputStack.top();
    }

    bool empty() {
        return inputStack.empty() && outputStack.empty();
    }
};

int main() {
    MyQueue q;
    q.push(1);
    q.push(2);
    cout << "Peek: " << q.peek() << endl;
    cout << "Pop: " << q.pop() << endl;
    cout << "Empty: " << (q.empty() ? "true" : "false") << endl;
    return 0;
}
